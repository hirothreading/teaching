getwd()
# Prelims Economics: Macroeconomics Problem Set 5#
# Written by David Murakami#
# St Hildas College, University of Oxford#
#
rm(list=ls(all=TRUE));#
graphics.off();#
#
# load libraries#
library(readxl);#
library(tseries);#
library(TSA);#
library(mFilter);#
library(quantmod);#
library(xts);#
#
# set working directory accordingly for your computer:#
setwd("/Users/hiro/Documents/GitHub/Teaching/Oxford Prelims Economics/Macroeconomics");#
getwd();
usdata = read_excel("USdata.xlsx",sheet=1,col_names=TRUE);
attach(usgdpdata);
usdata = read_excel("USdata.xlsx",sheet=1,col_names=TRUE);
# load libraries#
library(readxl);#
library(tseries);#
library(TSA);#
library(mFilter);#
library(quantmod);#
library(xts);
attach(usdata);
names(usdata)
Yhat = 100*(GDP-GDPPOT)/GDPPOT;
plot(Yhat)
summary(Yhat)
cbind(usdata,Yhat);
usdata=cbind(usdata,Yhat);
# Prelims Economics: Macroeconomics Problem Set 5#
# Written by David Murakami#
# St Hildas College, University of Oxford#
#
rm(list=ls(all=TRUE));#
graphics.off();#
#
# load libraries#
library(readxl);#
library(tseries);#
library(TSA);#
library(mFilter);#
library(quantmod);#
library(xts);#
#
# set working directory accordingly for your computer:#
setwd("/Users/hiro/Documents/GitHub/Teaching/Oxford Prelims Economics/Macroeconomics");#
getwd();#
#
# import data#
usdata = read_excel("USdata.xlsx",sheet=1,col_names=TRUE);#
attach(usdata);#
#
# set parameters#
phipi = 1.5;#
phiy = 0.5#
pibar = 2;#
rbar = 2;#
#
# need to construct Y tilde (percent deviation from steady state)#
names(usdata); # double check column names#
Yhat = 100*(GDP-GDPPOT)/GDPPOT;#
# plot(Yhat); #can quickly check the data#
# summary(Yhat);#
#
usdata=cbind(usdata,Yhat);
i_TR = (rbar+pibar) + phipi*COREINF + phiy*Yhat;
view(usdata)
i_TR_ts = ts(i_TR,start=c(1958,1),frequency=4);
EFFR_ts = ts(EFFR,start=c(1958,1),frequency=4);
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule","EFFR"),col=c("blue","red"),lty=c(1,1),ncol=1);
i_TR_CPI = (rbar+pibar) + phipi*CPIINF + phiy*Yhat;
i_TR_CPI_ts = ts(i_TR_CPI,start=c(1958,1),frequency=4);
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate (Core; CPI) vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(i_TR_CPI_ts,col="green");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule (Core)","Taylor Rule (CPI)","EFFR"),col=c("blue","green","red"),lty=c(1,1,1),ncol=3);
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate (Core; CPI) vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(i_TR_CPI_ts,col="green");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule (Core)","Taylor Rule (CPI)","EFFR"),col=c("blue","green","red"),lty=c(1,1,1),ncol=2);
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate (Core; CPI) vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(i_TR_CPI_ts,col="green");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule (Core)","Taylor Rule (CPI)","EFFR"),col=c("blue","green","red"),lty=c(1,1,1),ncol=1);
# Prelims Economics: Macroeconomics Problem Set 5#
# Written by David Murakami#
# St Hildas College, University of Oxford#
#
rm(list=ls(all=TRUE));#
graphics.off();#
#
# load libraries#
library(readxl);#
library(tseries);#
library(TSA);#
library(mFilter);#
library(quantmod);#
library(xts);#
#
# set working directory accordingly for your computer:#
setwd("/Users/hiro/Documents/GitHub/Teaching/Oxford Prelims Economics/Macroeconomics");#
getwd();#
#
# import data#
usdata = read_excel("USdata.xlsx",sheet=1,col_names=TRUE);#
attach(usdata);#
#
# set parameters#
phipi = 1.5;#
phiy = 0.5#
pibar = 2;#
rbar = 2;#
#
# need to construct Yhat (percent deviation from steady state)#
names(usdata); # double check column names#
Yhat = 100*(GDP-GDPPOT)/GDPPOT;#
# plot(Yhat); #can quickly check the data#
# summary(Yhat);#
usdata=cbind(usdata,Yhat);#
#
# Make Taylor rule implied interest rate#
i_TR = (rbar+pibar) + phipi*COREINF + phiy*Yhat;#
#
# prepare data for plotting#
i_TR_ts = ts(i_TR,start=c(1958,1),frequency=4);#
EFFR_ts = ts(EFFR,start=c(1958,1),frequency=4);#
#
# plot#
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule","EFFR"),col=c("blue","red"),lty=c(1,1),ncol=1);#
#
# repeat exercise but use CPI inflation instead of core inflation#
i_TR_CPI = (rbar+pibar) + phipi*CPIINF + phiy*Yhat;#
i_TR_CPI_ts = ts(i_TR_CPI,start=c(1958,1),frequency=4);#
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate (Core; CPI) vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(i_TR_CPI_ts,col="green");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule (Core)","Taylor Rule (CPI)","EFFR"),col=c("blue","green","red"),lty=c(1,1,1),ncol=1);
TR_core = glm(EFFR ~ COREINF + Yhat);
summary(TR_core);
summary(TR_CPI);
TR_CPI = glm(EFFR ~ CPIINF + Yhat);
summary(TR_CPI);
# Prelims Economics: Macroeconomics Problem Set 5#
# Written by David Murakami#
# St Hildas College, University of Oxford#
#
rm(list=ls(all=TRUE));#
graphics.off();#
#
# load libraries#
library(readxl);#
library(tseries);#
library(TSA);#
library(mFilter);#
library(quantmod);#
library(xts);#
#
# set working directory accordingly for your computer:#
setwd("/Users/hiro/Documents/GitHub/Teaching/Oxford Prelims Economics/Macroeconomics");#
getwd();
# set parameters#
phipi = 1.5;#
phiy = 0.5#
pibar = 2;#
rbar = 2;#
#
# need to construct Yhat (percent deviation from steady state)#
names(usdata); # double check column names#
Yhat = 100*(GDP-GDPPOT)/GDPPOT;#
# plot(Yhat); #can quickly check the data#
# summary(Yhat);#
usdata=cbind(usdata,Yhat);#
#
# Make Taylor rule implied interest rate#
i_TR = (rbar+pibar) + phipi*COREINF + phiy*Yhat;#
#
# prepare data for plotting#
i_TR_ts = ts(i_TR,start=c(1958,1),frequency=4);#
EFFR_ts = ts(EFFR,start=c(1958,1),frequency=4);#
#
# plot#
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule","EFFR"),col=c("blue","red"),lty=c(1,1),ncol=1);
# import data#
usdata = read_excel("USdata.xlsx",sheet=1,col_names=TRUE);#
attach(usdata);#
#
# set parameters#
phipi = 1.5;#
phiy = 0.5#
pibar = 2;#
rbar = 2;#
#
# need to construct Yhat (percent deviation from steady state)#
names(usdata); # double check column names#
Yhat = 100*(GDP-GDPPOT)/GDPPOT;#
# plot(Yhat); #can quickly check the data#
# summary(Yhat);#
usdata=cbind(usdata,Yhat);#
#
# Make Taylor rule implied interest rate#
i_TR = (rbar+pibar) + phipi*COREINF + phiy*Yhat;#
#
# prepare data for plotting#
i_TR_ts = ts(i_TR,start=c(1958,1),frequency=4);#
EFFR_ts = ts(EFFR,start=c(1958,1),frequency=4);#
#
# plot#
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule","EFFR"),col=c("blue","red"),lty=c(1,1),ncol=1);
# repeat exercise but use CPI inflation instead of core inflation#
i_TR_CPI = (rbar+pibar) + phipi*CPIINF + phiy*Yhat;#
i_TR_CPI_ts = ts(i_TR_CPI,start=c(1958,1),frequency=4);#
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate (Core; CPI) vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(i_TR_CPI_ts,col="green");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule (Core)","Taylor Rule (CPI)","EFFR"),col=c("blue","green","red"),lty=c(1,1,1),ncol=1);
TR_core = glm(EFFR ~ COREINF + Yhat);
summary(TR_core);
TR_CPI = glm(EFFR ~ CPIINF + Yhat);
summary(TR_CPI);
# Prelims Economics: Macroeconomics Problem Set 5#
# Written by David Murakami#
# St Hildas College, University of Oxford#
#
rm(list=ls(all=TRUE));#
graphics.off();#
#
# load libraries#
library(readxl);#
library(tseries);#
library(TSA);#
library(mFilter);#
library(quantmod);#
library(xts);#
#
# set working directory accordingly for your computer:#
setwd("/Users/hiro/Documents/GitHub/Teaching/Oxford Prelims Economics/Macroeconomics");#
getwd();#
#
# import data#
usdata = read_excel("USdata.xlsx",sheet=1,col_names=TRUE);#
attach(usdata);#
#
# set parameters#
phipi = 1.5;#
phiy = 0.5#
pibar = 2;#
rbar = 2;#
#
# need to construct Yhat (percent deviation from steady state)#
names(usdata); # double check column names#
Yhat = 100*(GDP-GDPPOT)/GDPPOT;#
# plot(Yhat); #can quickly check the data#
# summary(Yhat);#
usdata=cbind(usdata,Yhat);#
#
# Make Taylor rule implied interest rate#
i_TR = (rbar+pibar) + phipi*COREINF + phiy*Yhat;#
#
# prepare data for plotting#
i_TR_ts = ts(i_TR,start=c(1958,1),frequency=4);#
EFFR_ts = ts(EFFR,start=c(1958,1),frequency=4);#
#
# plot#
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule","EFFR"),col=c("blue","red"),lty=c(1,1),ncol=1);#
#
# repeat exercise but use CPI inflation instead of core inflation#
i_TR_CPI = (rbar+pibar) + phipi*CPIINF + phiy*Yhat;#
i_TR_CPI_ts = ts(i_TR_CPI,start=c(1958,1),frequency=4);#
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate (Core; CPI) vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(i_TR_CPI_ts,col="green");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule (Core)","Taylor Rule (CPI)","EFFR"),col=c("blue","green","red"),lty=c(1,1,1),ncol=1);#
### Not part of the problem set ####
# We could even try and estimate ibar, phipi, and phiy using OLS estimation:#
TR_core = glm(EFFR ~ COREINF + Yhat);#
summary(TR_core);#
TR_CPI = glm(EFFR ~ CPIINF + Yhat);#
summary(TR_CPI);#
# How do these estimate results compare with the ibar, phipi, and phiy values we assumed?#
# What part of the Taylor Rule, when estimated with CPI inflation, violates macroeconomic theory?
# repeat exercise but use CPI inflation instead of core inflation#
i_TR_CPI = (rbar+pibar) + phipi*CPIINF + phiy*Yhat;#
i_TR_CPI_ts = ts(i_TR_CPI,start=c(1958,1),frequency=4);#
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate (Core; CPI) vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(i_TR_CPI_ts,col="green");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule (Core)","Taylor Rule (CPI)","EFFR"),col=c("blue","green","red"),lty=c(1,1,1),ncol=1);
plot.ts(CPIINF)
# repeat exercise but use CPI inflation instead of core inflation#
i_TR_CPI = (rbar+pibar) + phipi*CPIINF + phiy*Yhat;#
i_TR_CPI_ts = ts(i_TR_CPI,start=c(1958,1),frequency=4);#
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate (Core; CPI) vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(i_TR_CPI_ts,col="green");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule (Core)","Taylor Rule (CPI)","EFFR"),col=c("blue","green","red"),lty=c(1,1,1),ncol=1);
TR_core = glm(EFFR ~ COREINF + Yhat);#
summary(TR_core);#
TR_CPI = glm(EFFR ~ CPIINF + Yhat);#
summary(TR_CPI);
# Prelims Economics: Macroeconomics Problem Set 5#
# Written by David Murakami#
# St Hildas College, University of Oxford#
#
rm(list=ls(all=TRUE));#
graphics.off();#
#
# load libraries#
library(readxl);#
library(tseries);#
library(TSA);#
library(mFilter);#
library(quantmod);#
library(xts);#
#
# set working directory accordingly for your computer:#
setwd("/Users/hiro/Documents/GitHub/Teaching/Oxford Prelims Economics/Macroeconomics");#
getwd();#
#
# import data#
usdata = read_excel("USdata.xlsx",sheet=1,col_names=TRUE);#
attach(usdata);#
#
# set parameters#
phipi = 1.5;#
phiy = 0.5#
pibar = 2;#
rbar = 2;#
#
# need to construct Yhat (percent deviation from steady state)#
names(usdata); # double check column names#
Yhat = 100*(GDP-GDPPOT)/GDPPOT;#
# plot(Yhat); #can quickly check the data#
# summary(Yhat);#
usdata=cbind(usdata,Yhat);#
#
# Make Taylor rule implied interest rate#
i_TR = (rbar+pibar) + phipi*COREINF + phiy*Yhat;#
#
# prepare data for plotting#
i_TR_ts = ts(i_TR,start=c(1958,1),frequency=4);#
EFFR_ts = ts(EFFR,start=c(1958,1),frequency=4);
quartz();#
plot.ts(i_TR_ts,main="Taylor Rule Interest Rate vs Effective Federal Funds Rate",ylab="%p.a.",xlab=NULL,col="blue");#
lines(EFFR_ts,col="red");#
legend("topright",legend=c("Taylor Rule","EFFR"),col=c("blue","red"),lty=c(1,1),ncol=1);
# Prelims Economics: Practising R#
# Written by David Murakami#
# St Hildas College, University of Oxford#
#
rm(list=ls(all=TRUE));#
graphics.off();#
#
# load libraries#
library(readxl);#
library(tseries);#
library(TSA);#
library(mFilter);#
library(quantmod);#
library(xts);#
#
# set working directory accordingly for your computer:#
# setwd("");#
getwd();#
#
# import data#
usgdpdata = read_excel("usrealgdp.xlsx",sheet=1,col_names=TRUE);#
attach(usgdpdata);#
#
# create %ch.gdp "y hat"#
log_gdp = log(GDP);#
d_log_gdp = diff(log_gdp);#
gdp_hat = 100*d_log_gdp;#
gdp_hat = as.matrix(gdp_hat);#
gdp_hat = c(0,gdp_hat);#
gdp_hat = gdp_hat - mean(gdp_hat); #
#
# create time series#
gdp_ts = ts(log_gdp,start=c(1947,1),frequency=4);#
gdp_hat_ts = ts(gdp_hat,start=c(1947,1),frequency=4);#
ts_data = cbind(gdp_ts,gdp_hat_ts);#
#
# make some plots#
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2);#
quartz();#
plot.ts(gdp_hat_ts,main="US Log Real GDP (%ch.)",ylab=NULL,xlab=NULL,col=4);#
abline(h=0);#
# can put them on the same window#
quartz();#
par(mfrow=c(2,1),mar=c(2,2,2,1));#
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2);#
plot.ts(gdp_hat_ts,main="US Log Real GDP (%ch.)",ylab=NULL,xlab=NULL,col=4);#
abline(h=0);
gdp_ts
graphics.off
graphics.off()
rm(list=ls(all=TRUE));#
graphics.off();#
#
# load libraries#
library(readxl);#
library(tseries);#
library(TSA);#
library(mFilter);#
library(quantmod);#
library(xts);#
#
# set working directory accordingly for your computer:#
# setwd("");#
getwd();#
#
# import data#
usgdpdata = read_excel("usrealgdp.xlsx",sheet=1,col_names=TRUE);#
attach(usgdpdata);#
#
# create %ch.gdp "y hat"#
log_gdp = log(GDP);#
d_log_gdp = diff(log_gdp);#
gdp_hat = 100*d_log_gdp;#
gdp_hat = as.matrix(gdp_hat);#
gdp_hat = c(0,gdp_hat);#
gdp_hat = gdp_hat - mean(gdp_hat); #
#
# create time series#
gdp_ts = ts(log_gdp,start=c(1947,1),frequency=4);#
gdp_hat_ts = ts(gdp_hat,start=c(1947,1),frequency=4);#
ts_data = cbind(gdp_ts,gdp_hat_ts);
setwd(setwd("/Users/hiro/Documents/GitHub/Teaching/Oxford Prelims Economics/Econometrics");
setwd("/Users/hiro/Documents/GitHub/Teaching/Oxford Prelims Economics/Econometrics");
# import data#
usgdpdata = read_excel("usrealgdp.xlsx",sheet=1,col_names=TRUE);#
attach(usgdpdata);#
#
# create %ch.gdp "y hat"#
log_gdp = log(GDP);#
d_log_gdp = diff(log_gdp);#
gdp_hat = 100*d_log_gdp;#
gdp_hat = as.matrix(gdp_hat);#
gdp_hat = c(0,gdp_hat);#
gdp_hat = gdp_hat - mean(gdp_hat); #
#
# create time series#
gdp_ts = ts(log_gdp,start=c(1947,1),frequency=4);#
gdp_hat_ts = ts(gdp_hat,start=c(1947,1),frequency=4);#
ts_data = cbind(gdp_ts,gdp_hat_ts);#
#
# make some plots#
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2);#
quartz();#
plot.ts(gdp_hat_ts,main="US Log Real GDP (%ch.)",ylab=NULL,xlab=NULL,col=4);#
abline(h=0);#
# can put them on the same window#
quartz();#
par(mfrow=c(2,1),mar=c(2,2,2,1));#
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2);#
plot.ts(gdp_hat_ts,main="US Log Real GDP (%ch.)",ylab=NULL,xlab=NULL,col=4);#
abline(h=0);
log_gdp = log(GDP);#
d_log_gdp = diff(log_gdp);#
gdp_hat = 100*d_log_gdp;#
gdp_hat = as.matrix(gdp_hat);#
gdp_hat = c(0,gdp_hat);
gdp_hat_ts = ts(gdp_hat,start=c(1947,1),frequency=4);
gdp_ts = ts(log_gdp,start=c(1947,1),frequency=4);
plot.ts(gdp_hat_ts,main="US Log Real GDP (%ch.)",ylab=NULL,xlab=NULL,col=4);
abline(h=0);
quartz();#
par(mfrow=c(2,1),mar=c(2,2,2,1));#
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2);#
plot.ts(gdp_hat_ts,main="US Log Real GDP (%ch.)",ylab=NULL,xlab=NULL,col=4);#
abline(h=0);
mean(gdp_hat)
x=1:300;
linfit = lm(log_gdp~x);
summary(linfit);
abline(lm(log_gdp~x))
quartz();
par(mfrow=c(2,1),mar=c(2,2,2,1));
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2);
abline(lm(log_gdp~x))
llfit = lm(log_gdp~x)
lines(x=index(llfit$fitted.values),y=llfit$fitted.values,col="blue")
plot(index(llfit),log_gdp,type="l",col="red")
quartz();
plot(log_gdp,main="US Real GDP (log)",xlab="",ylab="log(GDP)",col="blue");
abline(linfit,col="red");
quartz();#
par(mfrow=c(2,1),mar=c(2,2,2,1));#
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2);#
plot.ts(gdp_hat_ts,main="US Log Real GDP (%ch.)",ylab=NULL,xlab=NULL,col=4);#
abline(h=0);
plot(log_gdp,main="US Real GDP (log)",xlab="Time",xaxt="n",ylab="log(GDP)",col="blue");
abline(linfit,col="red");
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2)
lines(linfit,col="blue")
x_ts = ts(x,start=c(1947,1),frequency=4);
hpf_gdp = hpfilter(log_gdp,freq=1600); #gives x,trend,cycle#
gdp_ts = ts(hpf_gdp$x,start=c(1947,1),frequency=4); #rewrites gdp_ts above#
trend_ts = ts(hpf_gdp$trend,start=c(1947,1),frequency=4);#
cycle_ts = ts(hpf_gdp$cycle,start=c(1947,1),frequency=4);#
#
# Plot the HP filtered data#
quartz();#
par(mfrow=c(2,1),mar=c(2,4,2,1));#
plot.ts(gdp_ts,main="Hodrick-Prescott Filter of US Real GDP (log)",col="blue",ylab="log(GDP)");#
lines(trend_ts,col="red");#
legend("topleft",legend=c("log(GDP)","Trend"),col=c("blue","red"),lty=rep(1,2),ncol=2);#
plot.ts(cycle_ts,main="Cyclical Component (deviations from trend)",col="blue",ylab="");#
abline(h=0);
quartz()
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2)
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col="blue")
time(gdp_ts)
lines(time(gdp_ts),linfit,col="red")
lines(time(gdp_ts),linfit,col="red",type="l")
lines(time(gdp_ts),linfit,col="red",lty="l")
lines(time(gdp_ts),linfit$fitted.values,col="red")
summary(linfit)
lines(time(gdp_ts),predict(linfit),col="red")
time(gpd_ts)
time(gdp_ts)
summary(linfit)
gdp_ts
rownames(gdp_ts)
gdp_ts
gdp_ts[[1]]
time(gdp_ts)
time(gdp_ts)
class(time(gdp_ts))
time(gdp_ts)[,1]
seq(1947, 2021)
plot(seq(1947, 2021)
plot(gdp_ts)
lines(seq(1947, 2021), seq(1947, 2021))
lines(seq(1947, 2021), seq(1947, 2021))
line(seq(1947, 2021), seq(1947, 2021))
lines(seq(1947, 2021), seq(1947, 2021))
plot(gdp_ts)
lines(seq(1947, 2021), seq(1947, 2021))
plot(gdp_ts)
plot(gdp_ts)
plot(gdp_ts)
plot(gdp_ts)
length(seq(1947, 2021))
seq(1947, 2021, length.out=75*4)
seq(1947, 2021, length.out=75*4)
plot(seq(1947, 2021, length.out=75*4),
linfit
linfit$
fitted.values
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col=2);
plot.ts(gdp_ts,main="US Log Real GDP",ylab=NULL,xlab=NULL,col="blue");
lines(dates(gdp_ts),linfit$fitted.values)
lines(date(gdp_ts),linfit$fitted.values)
lines(time(gdp_ts),linfit$fitted.values)
linfit=lm(gdp_ts~time(gdp_ts))
summary(linfit)
lines(linfit$fitted.values)
# Extract trend and business cycles from log real GDP data#
hpf_gdp = hpfilter(log_gdp,freq=1600); #gives x,trend,cycle#
gdp_ts = ts(hpf_gdp$x,start=c(1947,1),frequency=4); #rewrites gdp_ts above#
trend_ts = ts(hpf_gdp$trend,start=c(1947,1),frequency=4);#
cycle_ts = ts(hpf_gdp$cycle,start=c(1947,1),frequency=4);#
#
# Plot the HP filtered data#
quartz();#
par(mfrow=c(2,1),mar=c(2,4,2,1));#
plot.ts(gdp_ts,main="Hodrick-Prescott Filter of US Real GDP (log)",col="blue",ylab="log(GDP)");#
lines(trend_ts,col="red");#
legend("topleft",legend=c("log(GDP)","Trend"),col=c("blue","red"),lty=rep(1,2),ncol=2);#
plot.ts(cycle_ts,main="Cyclical Component (deviations from trend)",col="blue",ylab="");#
abline(h=0);
